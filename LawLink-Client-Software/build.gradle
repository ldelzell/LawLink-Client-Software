plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "5.0.0.4638"
	id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'ch.qos.logback:logback-classic:1.4.12'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testRuntimeOnly 'com.h2database:h2'
}

sonarqube {
	properties {
		property "sonar.projectKey", "Lawlink-Client-Software"
		property "sonar.projectName", "Lawlink Client Software"
		property "sonar.host.url", System.getenv("SONAR_HOST_URL")
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.token", System.getenv("SONAR_TOKEN")
		property "sonar.login", "sqp_f16c9c75c7de31b066bf3cfc908aaa350fd370bd"

		property "sonar.projectVersion", "1.0"
		property "sonar.sources", "src/main"
		property "sonar.tests", "src/test"
		property "sonar.java.binaries", "build/classes"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.gradle.skipCompile", "true"
	}
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
	}
	exclude '**/*integration.*'
}

tasks.named('sonarqube') {
	dependsOn 'jacocoTestReport'
}
